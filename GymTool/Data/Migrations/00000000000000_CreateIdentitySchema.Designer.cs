// <auto-generated />
using GymTool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System;

namespace GymTool.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("00000000000000_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("ConcurrencyStamp")
                    .IsConcurrencyToken()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.Property<string>("NormalizedName")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.HasKey("Id");

                b.HasIndex("NormalizedName")
                    .IsUnique()
                    .HasName("RoleNameIndex")
                    .HasFilter("[NormalizedName] IS NOT NULL");

                b.ToTable("AspNetRoles");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("ClaimType")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ClaimValue")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("RoleId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("AspNetRoleClaims");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("nvarchar(450)");

                b.Property<int>("AccessFailedCount")
                    .HasColumnType("int");

                b.Property<string>("ConcurrencyStamp")
                    .IsConcurrencyToken()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.Property<bool>("EmailConfirmed")
                    .HasColumnType("bit");

                b.Property<bool>("LockoutEnabled")
                    .HasColumnType("bit");

                b.Property<DateTimeOffset?>("LockoutEnd")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("NormalizedEmail")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.Property<string>("NormalizedUserName")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.Property<string>("PasswordHash")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("PhoneNumberConfirmed")
                    .HasColumnType("bit");

                b.Property<string>("SecurityStamp")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("TwoFactorEnabled")
                    .HasColumnType("bit");

                b.Property<string>("UserName")
                    .HasColumnType("nvarchar(256)")
                    .HasMaxLength(256);

                b.HasKey("Id");

                b.HasIndex("NormalizedEmail")
                    .HasName("EmailIndex");

                b.HasIndex("NormalizedUserName")
                    .IsUnique()
                    .HasName("UserNameIndex")
                    .HasFilter("[NormalizedUserName] IS NOT NULL");

                b.ToTable("AspNetUsers");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("ClaimType")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ClaimValue")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("AspNetUserClaims");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
            {
                b.Property<string>("LoginProvider")
                    .HasColumnType("nvarchar(128)")
                    .HasMaxLength(128);

                b.Property<string>("ProviderKey")
                    .HasColumnType("nvarchar(128)")
                    .HasMaxLength(128);

                b.Property<string>("ProviderDisplayName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("LoginProvider", "ProviderKey");

                b.HasIndex("UserId");

                b.ToTable("AspNetUserLogins");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
            {
                b.Property<string>("UserId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("RoleId")
                    .HasColumnType("nvarchar(450)");

                b.HasKey("UserId", "RoleId");

                b.HasIndex("RoleId");

                b.ToTable("AspNetUserRoles");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
            {
                b.Property<string>("UserId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("LoginProvider")
                    .HasColumnType("nvarchar(128)")
                    .HasMaxLength(128);

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(128)")
                    .HasMaxLength(128);

                b.Property<string>("Value")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("UserId", "LoginProvider", "Name");

                b.ToTable("AspNetUserTokens");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
            {
                b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
            {
                b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
            {
                b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
            {
                b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
            {
                b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("GymTool.Areas.Users.Models.TbGimnasio", b =>
            {
                b.Property<int>("IdGimnasio")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Nombre")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Direccion")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("Estado")
                    .HasColumnType("bit");

                b.HasKey("IdGimnasio");

                b.ToTable("TbGimnasio");
            });


            modelBuilder.Entity("GymTool.Areas.Membership.Models.TbMembresia", b =>
            {
                b.Property<int>("IdMembresia")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Nombre")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Descripcion")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Monto")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Cantidad")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Periodo")
                    .HasColumnType("nvarchar(max)");

                b.Property<int?>("GimnasioId")
                        .HasColumnType("int");

                b.Property<bool>("Estado")
                    .HasColumnType("bit");

                b.HasKey("IdMembresia");

                b.HasIndex("GimnasioId");

                b.ToTable("TbMembresia");
            });

            modelBuilder.Entity("GymTool.Areas.Users.Models.TbUsuarioGimnasio", b =>
            {
                b.Property<int>("IdUsuarioGimnasio")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("UsuarioId")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("GimnasioId")
                    .HasColumnType("int");

                b.HasKey("IdUsuarioGimnasio");

                b.HasIndex("UsuarioId");

                b.HasIndex("GimnasioId");

                b.ToTable("TbUsuarioGimnasio");
            });

            modelBuilder.Entity("GymTool.Areas.Users.Models.TUsers", b =>
            {
                b.Property<int>("IdUsers")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Cedula")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Codigo")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Nombre")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Apellidos")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Correo")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Telefono")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("TelefonoEmergencia")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UsuarioId")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("GimnasioId")
                    .HasColumnType("int");

                b.Property<bool>("Estado")
                   .HasColumnType("bit");

                b.HasKey("IdUsers");

                b.HasIndex("UsuarioId");

                b.HasIndex("GimnasioId");

                b.ToTable("TUsers");
            });

            modelBuilder.Entity("GymTool.Areas.Customers.Models.TbCliente", b =>
            {
                b.Property<int>("IdCliente")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Apellidos")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Cedula")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Correo")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Direccion")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("EmpleadoId")
                    .HasColumnType("int");

                b.Property<bool>("Estado")
                    .HasColumnType("bit");

                b.Property<DateTime>("FechaNacimiento")
                    .HasColumnType("datetime2");

                b.Property<int>("GimnasioId")
                    .HasColumnType("int");

                b.Property<byte[]>("Imagen")
                    .HasColumnType("varbinary(max)");

                b.Property<string>("Nombre")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Telefono")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("IdCliente");

                b.HasIndex("GimnasioId");

                b.HasIndex("EmpleadoId");


                b.ToTable("TbCliente");
            });

            modelBuilder.Entity("GymTool.Areas.Customers.Models.TbExpediente", b =>
            {
                b.Property<int>("IdExpediente")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<bool>("Alcohol")
                    .HasColumnType("bit");

                b.Property<bool>("Asma")
                    .HasColumnType("bit");

                b.Property<int?>("ClienteId")
                    .HasColumnType("int");

                b.Property<bool>("DM")
                    .HasColumnType("bit");

                b.Property<DateTime>("FechaInscripcion")
                    .HasColumnType("datetime2");

                b.Property<bool>("Fuma")
                    .HasColumnType("bit");

                b.Property<bool>("Fx")
                    .HasColumnType("bit");

                b.Property<bool>("HTA")
                    .HasColumnType("bit");

                b.Property<int>("MembresiaId")
                    .HasColumnType("int");

                b.Property<bool>("Obesidad")
                    .HasColumnType("bit");

                b.HasKey("IdExpediente");

                b.HasIndex("ClienteId");

                b.HasIndex("MembresiaId");

                b.ToTable("TbExpediente");
            });
#pragma warning restore 612, 618
        }
    }
}
